- 에러 : 하드웨어 고장으로 인해 실행 오류 가 발생
- 예외 : 잘못된 사용 또는 코딩으로 인한 오류
- 종류
        1. 일반예외 : 컴파일러가 예외 처리 코드 여부를 검사하는 예외
                - 실행 전에 예외처리 진행 가능
        2. 실행예외 : 컴파일러가 예외 처리 코드 여부를 검사하지 않는 예외
                - 개발자 경험 토대로 예외처리 진행/예상

- 자바는 예외 발생하면 예외 클래스부터 객체 (자동) 생성한다
        - 이 객체는 예외 처리 시 사용
        - throwable , ☆ Exception
- 표준 라이브러리
        ☆ 라이브러리 : 미리 만들어진 클래스/함수 집합/모임
            - 예외클래스
                - Exception                          : 다중 catch 했을때 상위 클래스 뒤에 작성한다
                - 실행예외
                    - NullPointerException           : 변수의 참조값이 없을때 예외 발생
                    - ArrayIndexOutOfBoundsException : 배열의 인덱스 범위를 벗어났을때 예외 발생
                    - NumberFormatException          : 정수타입으로 형변환을 할수 없을때 예외 발생
                - 일반예외
                    - ClassNotFoundException         : 해당 클래스를 찾지 못했을때 예외 발생



- 예외처리
        try{ }                              : 예외 발생 혹은 할것 같은 코드
        catch( 예외클래스 변수명 ){ }         : 예외 발생 했을때 코드
        finally{ }                          : 항상 실행 되는 코드 ( 생략가능 )

        - 리소드 안전하게 닫기
                try{
                        외부적인 요소와 연동 :
                                    1. FileInputStream() : 파일처리
                                    2. DriverManager.getConnection() : DB연동
                                    등등
                }catch ( 예외클래스 e ){

                }finally{
                        안전하게 연동된 요소와 끝마침/닫기
                        close();
                }
